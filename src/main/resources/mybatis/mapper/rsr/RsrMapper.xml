<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.vpplab.flow.domain.rsr.RsrDao">
    <select id="getClcRsrList" parameterType="hashMap" resultType="hashMap">
        SELECT
            CC.집합자원ID
            ,CC.중개사업자ID
            ,CC.집합자원그룹명
            ,CC.집합자원구분
            ,CC.운영상태
            ,CC.신청유형
            ,CC.처리상태
            ,CC.구성수
            ,CC.자원용량
            ,CC.PVWT용량
            ,CC.ESS용량
            ,CC.평균오차율
            ,CC.오차율평가
            ,CC.거래가능기간
            ,CC.신청일자
            FROM(SELECT
                    A.id AS 집합자원ID
                    ,A.agency_id AS 중개사업자ID
                    ,A.name AS 집합자원그룹명
                    ,A.type AS 집합자원구분
                    ,A.status AS 운영상태
                    ,A.apply_type AS 신청유형
                    ,A.apply_status AS 처리상태
                    ,B.resource_cnt AS 구성수
                    ,B.capacity AS 자원용량
                    ,B.capacityPvWt AS PVWT용량
                    ,B.ess_capacity AS ESS용량
                    ,C.error_rate AS 평균오차율
                    ,(CASE WHEN C.error_rate >= 0 AND C.error_rate     <![CDATA[ <= ]]> 6 THEN '좋음'
                        WHEN C.error_rate > 6 AND C.error_rate     <![CDATA[ <= ]]> 8 THEN '보통'
                        WHEN C.error_rate > 8 THEN '나쁨' END) AS 오차율평가
                    ,'' AS 거래가능기간
                    ,A.created_at AS 신청일자
                FROM resource_set A
                LEFT OUTER JOIN ( SELECT
                                    AA.resource_set_id
                                    ,COUNT(resource_id) AS  resource_cnt
                                    ,((CASE WHEN BB.facility_type ='01' OR BB.facility_type = '02' THEN SUM(BB.capacity) ELSE 0 END)+SUM(ess_capacity))  AS capacity
                                    ,CASE WHEN BB.facility_type ='01' OR BB.facility_type = '02' THEN SUM(BB.capacity) END AS capacityPvWt
                                    ,SUM(BB.ess_capacity) AS ess_capacity
                                FROM resource_set_list AA
                                LEFT OUTER JOIN resource BB ON AA.resource_id = BB.id  GROUP BY AA.resource_set_id) B ON A.id = B.resource_set_id
                LEFT OUTER JOIN forecast_by_resource_set C ON A.id = C.resource_set_id
                ) CC
        WHERE 1=1
        AND CC.중개사업자ID = #{중개사업자ID}
        <if test='id != null and id !=""'>
            AND CC.집합자원ID = #{id}
        </if>
        <if test='type != null and type !=""'>
            AND CC.집합자원구분 = #{type}
        </if>
        <if test='status != null and status !=""'>
            AND CC.운영상태 = #{status}
        </if>
        <if test='name != null and name !=""'>
            AND CC.집합자원그룹명 LIKE CONCAT('%',#{name},'%')
        </if>
        <if test='apply_type != null and apply_type !=""'>
            AND CC.신청유형 = #{apply_type}
        </if>
        <if test='apply_status != null and apply_status !=""'>
            AND CC.처리상태 = #{apply_status}
        </if>
        <if test='error_rate_cd != null and error_rate_cd !=""'>
            <if test='error_rate_cd !="01"'>
                AND CC.오차율평가 >= 0
                AND CC.오차율평가 <![CDATA[ <= ]]> 6
            </if>
            <if test='error_rate_cd !="02"'>
                AND CC.오차율평가 > 6
                AND CC.오차율평가 <![CDATA[ <= ]]> 8
            </if>
            <if test='error_rate_cd !="03"'>
                AND CC.오차율평가 > 8
            </if>
        </if>
        ORDER BY CC.집합자원ID
        LIMIT #{페이지번호},#{행갯수}
    </select>
    <select id="getClcRsrListCnt" parameterType="hashMap" resultType="int">
        SELECT
          COUNT(*) AS cnt
        FROM(SELECT
                A.id AS 집합자원ID
                ,A.agency_id AS 중개사업자ID
                ,A.name AS 집합자원그룹명
                ,A.type AS 집합자원구분
                ,A.status AS 운영상태
                ,A.apply_type AS 신청유형
                ,A.apply_status AS 처리상태
                ,B.resource_cnt AS 구성수
                ,B.capacity AS 자원용량
                ,B.capacityPvWt AS PVWT용량
                ,B.ess_capacity AS ESS용량
                ,C.error_rate AS 평균오차율
                ,(CASE WHEN C.error_rate >= 0 AND C.error_rate     <![CDATA[ <= ]]> 6 THEN '좋음'
                WHEN C.error_rate > 6 AND C.error_rate     <![CDATA[ <= ]]> 8 THEN '보통'
                WHEN C.error_rate > 8 THEN '나쁨' END) AS 오차율평가
                ,'' AS 거래가능기간
                ,A.created_at AS 신청일자
            FROM resource_set A
                LEFT OUTER JOIN ( SELECT
                                    AA.resource_set_id
                                    ,COUNT(resource_id) AS  resource_cnt
                                    ,((CASE WHEN BB.facility_type ='01' OR BB.facility_type = '02' THEN SUM(BB.capacity) ELSE 0 END)+SUM(ess_capacity))  AS capacity
                                    ,CASE WHEN BB.facility_type ='01' OR BB.facility_type = '02' THEN SUM(BB.capacity) END AS capacityPvWt
                                    ,SUM(BB.ess_capacity) AS ess_capacity
                                FROM resource_set_list AA
                                LEFT OUTER JOIN resource BB ON AA.resource_id = BB.id  GROUP BY AA.resource_set_id) B ON A.id = B.resource_set_id
                LEFT OUTER JOIN forecast_by_resource_set C ON A.id = C.resource_set_id
            ) CC
        WHERE 1=1
        AND CC.중개사업자ID = #{중개사업자ID}
        <if test='id != null and id !=""'>
            AND CC.집합자원ID = #{id}
        </if>
        <if test='type != null and type !=""'>
            AND CC.집합자원구분 = #{type}
        </if>
        <if test='status != null and status !=""'>
            AND CC.운영상태 = #{status}
        </if>
        <if test='name != null and name !=""'>
            AND CC.집합자원그룹명 LIKE CONCAT('%',#{name},'%')
        </if>
        <if test='apply_type != null and apply_type !=""'>
            AND CC.신청유형 = #{apply_type}
        </if>
        <if test='apply_status != null and apply_status !=""'>
            AND CC.처리상태 = #{apply_status}
        </if>
        <if test='error_rate_cd != null and error_rate_cd !=""'>
            <if test='error_rate_cd !="01"'>
                AND CC.오차율평가 >= 0
                AND CC.오차율평가 <![CDATA[ <= ]]> 6
            </if>
            <if test='error_rate_cd !="02"'>
                AND CC.오차율평가 > 6
                AND CC.오차율평가 <![CDATA[ <= ]]> 8
            </if>
            <if test='error_rate_cd !="03"'>
                AND CC.오차율평가 > 8
            </if>
        </if>
    </select>
    <insert id="setClcRsr" parameterType="hashMap">
        INSERT INTO resource_set(
             agency_id
            ,name
            ,status
            ,type
            ,apply_type
            ,apply_status
            ,created_at
            ,created_by
        )VALUES(
           #{중개사업자ID}
           ,#{집합자원그룹명}
           ,#{집합자원구분}
           ,#{운영상태}
           ,#{신청유형}
           ,#{처리상태}
           ,NOW()
           ,#{작성자}
       )
    </insert>
<select id="getClcRsrDtl" parameterType="hashMap" resultType="hashMap" >
    SELECT
        A.agency_id AS 중개사업자ID
         ,A.name AS 집합자원그룹명
         ,A.status AS 운영상태
         ,A.apply_type AS 신청유형
         ,A.apply_status AS 처리상태
         ,B.error_rate AS 평균오차율
         ,A.created_at AS 신청일시
    FROM resource_set A
             LEFT OUTER JOIN forecast_by_resource_set B ON A.id = B.resource_set_id
    WHERE A.id= #{집합자원ID}
</select>
<select id="getClcRsrMemoList" parameterType="hashMap" resultType="hashMap" >
    SELECT
        id AS 이벤트ID
        ,type AS 요청구분
        ,requested_at AS 요청일시
        ,requested_name AS 요청자이름
        ,requested_phone AS 요청자전화번호
        ,requested_memo AS 요청자이름
        ,approved_at AS 승인일시
        ,approved_name AS 승인자이름
        ,approved_phone AS 승인자전화번호
        ,approved_memo AS 승인자메모
    FROM event
    WHERE resource_id = #{집합자원ID}
    ORDER BY approved_at
</select>
<update id="setMemo" parameterType="hashMap"  >
    UPDATE event SET
        approved_memo = #{승인자메모}
 WHERE id = #{이벤트ID}
</update>
<update id="setMemoDel" parameterType="hashMap"  >
    DELETE FROM event WHERE  id = #{이벤트ID}
</update>

<select id="tab1List" parameterType="hashMap" resultType="hashMap" >
    SELECT
        B.base_date AS 측정일자
         ,B.base_time AS 측정시간
         ,B.forecast_amount_1st AS 1차예측
         ,B.forecast_amount_2nd AS 2차예측
         ,(B.forecast_amount_1st+B.forecast_amount_2nd) /2 AS 예측평균
         ,B.generation_amount AS 발전값
         ,B.resource_capacity AS 총설비용량
         ,B.error_rate AS 오차율
    FROM forecast_by_resource_set B
    WHERE B.resource_set_id = #{집합자원ID}
    ORDER BY B.base_date,B.base_time
</select>
<select id="tab2List" parameterType="hashMap" resultType="hashMap" >
    SELECT
        B.id AS 자원ID
         ,B.facility_type AS 설비구분
         ,B.status AS 발전상태
         ,B.capacity AS 설비용량
         ,B.ess_status AS ESS상태
         ,B.ess_capacity AS ESS용량
         ,B.name AS 발전자원명
         ,C.avg_error_rate AS 평균오차율
         ,C.max_error_rate AS 최대오차율
         ,C.min_error_rate AS 최소오차율
         ,D.brokerage_contract_end_date AS 계약종료일시
         ,B.created_at AS 자원추가일시
    FROM resource_set_list A
             INNER JOIN resource B ON  A.resource_id = B.id
             LEFT OUTER JOIN ( SELECT
                                   resource_id
                                    ,(SUM(error_rate) / COUNT(error_rate)) *100  AS avg_error_rate
                                    ,MAX(error_rate) AS max_error_rate
                                    ,MIN(error_rate) AS min_error_rate
                               FROM forecast_by_resource GROUP BY resource_id
                               ) C ON  B.id = C.resource_id
             LEFT OUTER JOIN resource_meta D ON A.resource_id = D.resource_id
    WHERE A.resource_set_id = #{집합자원ID}
    ORDER BY B.id
    LIMIT #{페이지번호},#{행갯수}
</select>
    <select id="tab2ListCnt" parameterType="hashMap" resultType="int" >
        SELECT
         COUNT(*) AS CNT
        FROM resource_set_list A
                 INNER JOIN resource B ON  A.resource_id = B.id
                 LEFT OUTER JOIN ( SELECT
                                       resource_id
                                        ,(SUM(error_rate) / COUNT(error_rate)) *100  AS avg_error_rate
                                        ,MAX(error_rate) AS max_error_rate
                                        ,MIN(error_rate) AS min_error_rate
                                   FROM forecast_by_resource GROUP BY resource_id
                                   ) C ON  B.id = C.resource_id
                 LEFT OUTER JOIN resource_meta D ON A.resource_id = D.resource_id
        WHERE A.resource_set_id = #{집합자원ID}
    </select>
    <select id="getRsrInfo" parameterType="hashMap" resultType="hashMap" >
        SELECT
            COUNT(A.resource_set_id) AS 집합자원갯수
            ,C.집합지원총용량
            ,C.평균오차율평가
            ,C.평균오차율
            ,C.최대오차율평가
            ,C.최대오차율
            ,C.최소오차율평가
            ,C.최소오차율
            ,(B.cnt /B.allCnt) * 100 AS 가동율
        FROM resource_set_list A
            LEFT OUTER JOIN (
                            SELECT
                                id
                                ,SUM(CASE WHEN status = '01' THEN '1' ELSE '0' END) AS cnt
                                ,COUNT(status) AS allCnt
                            FROM resource
                            ) B ON A.resource_id = B.id
            LEFT OUTER JOIN (
                            SELECT
                                resource_set_id
                                ,SUM(resource_capacity) AS 집합지원총용량
                                ,(CASE WHEN ((SUM(error_rate) / COUNT(error_rate)) *100) >= 0 AND ((SUM(error_rate) / COUNT(error_rate)) *100)  <![CDATA[ <= ]]>  6 THEN '좋음'
                                    WHEN ((SUM(error_rate) / COUNT(error_rate)) *100) > 6 AND ((SUM(error_rate) / COUNT(error_rate)) *100)  <![CDATA[ <= ]]>  8 THEN '보통'
                                    WHEN ((SUM(error_rate) / COUNT(error_rate)) *100) > 8 THEN '나쁨' END) AS 평균오차율평가
                                ,(SUM(error_rate) / COUNT(error_rate)) *100  AS 평균오차율
                                ,(CASE WHEN MAX(error_rate) >= 0 AND MAX(error_rate) <![CDATA[ <= ]]> 6 THEN '좋음'
                                    WHEN MAX(error_rate) > 6 AND MAX(error_rate)  <![CDATA[ <= ]]>  8 THEN '보통'
                                    WHEN MAX(error_rate) > 8 THEN '나쁨' END) AS  최대오차율평가
                                ,MAX(error_rate) AS 최대오차율
                                ,(CASE WHEN MIN(error_rate) >= 0 AND MIN(error_rate) <![CDATA[ <= ]]>  6 THEN '좋음'
                                    WHEN MIN(error_rate) > 6 AND MIN(error_rate)  <![CDATA[ <= ]]>  8 THEN '보통'
                                    WHEN MIN(error_rate) > 8 THEN '나쁨' END) AS  최소오차율평가
                                ,MIN(error_rate) AS 최소오차율
                            FROM forecast_by_resource_set
                            ) C ON A.resource_set_id = C.resource_set_id
        WHERE A.resource_set_id = #{집합자원ID}
        GROUP BY A.resource_set_id
    </select>

    <update id="setRsrPlantDel" parameterType="hashMap"  >
        DELETE FROM resource_set_list WHERE  resource_set_id = #{집합자원ID} AND resource_id = #{자원ID}
    </update>
    <select id="getRsrPlantList" parameterType="hashMap" resultType="hashMap" >
        SELECT
            A.id AS 자원ID
             ,A.facility_type AS 설비구분
             ,A.status AS 발전상태
             ,A.capacity AS 설비용량
             ,A.ess_status AS ESS상태
             ,A.ess_capacity AS ESS용량
             ,A.name AS 발전자원명
             ,B.avg_error_rate AS 평균오차율
             ,B.max_error_rate AS 최대오차율
             ,B.min_error_rate AS 최소오차율
             ,C.brokerage_contract_end_date AS 계약종료일시
             ,A.created_at AS 자원추가일시
        FROM resource A
                 LEFT OUTER JOIN ( SELECT
                                       resource_id
                                        ,(SUM(error_rate) / COUNT(error_rate)) *100  AS avg_error_rate
                                        ,MAX(error_rate) AS max_error_rate
                                        ,MIN(error_rate) AS min_error_rate
                                   FROM forecast_by_resource GROUP BY resource_id
        ) B ON  A.id = B.resource_id
                 LEFT OUTER JOIN resource_meta C ON A.id = C.resource_id
        WHERE A.id NOT IN(SELECT resource_id FROM resource_set_list)
        AND C.kpx_resource_id IS NOT NULL
        <if test='facility_type != null and facility_type !=""'>
        AND A.facility_type = #{facility_type}
        </if>
        <if test='status != null and status !=""'>
            AND A.status = #{status}
        </if>
        <if test='name != null and name !=""'>
            AND A.name LIKE CONCAT('%',#{name},'%')
        </if>
        <if test='stat_capacity != null and stat_capacity !=""'>
            AND A.capacity <![CDATA[ >= ]]>  #{stat_capacity}
        </if>
        <if test='end_capacity != null and end_capacity !=""'>
            AND A.capacity <![CDATA[ <= ]]>  #{end_capacity}
        </if>
        <if test='stat_avg_error_rate != null and stat_avg_error_rate !=""'>
            AND B.avg_error_rate <![CDATA[ >= ]]>  #{stat_avg_error_rate}
        </if>
        <if test='end_avg_error_rate != null and end_avg_error_rate !=""'>
            AND B.avg_error_rate <![CDATA[ <= ]]>  #{end_avg_error_rate}
        </if>
        ORDER BY A.id
        LIMIT #{페이지번호},#{행갯수}
    </select>
    <select id="getRsrPlantListCnt" parameterType="hashMap" resultType="int" >
        SELECT
           COUNT(A.id)  AS CNT
        FROM resource A
                 LEFT OUTER JOIN ( SELECT
                                       resource_id
                                        ,(SUM(error_rate) / COUNT(error_rate)) *100  AS avg_error_rate
                                        ,MAX(error_rate) AS max_error_rate
                                        ,MIN(error_rate) AS min_error_rate
                                   FROM forecast_by_resource GROUP BY resource_id
        ) B ON  A.id = B.resource_id
                LEFT OUTER JOIN resource_meta C ON A.id = C.resource_id
        WHERE A.id NOT IN(SELECT resource_id FROM resource_set_list)
          AND C.kpx_resource_id IS NOT NULL
        <if test='facility_type != null and facility_type !=""'>
            AND A.facility_type = #{facility_type}
        </if>
        <if test='status != null and status !=""'>
            AND A.status = #{status}
        </if>
        <if test='name != null and name !=""'>
            AND A.name LIKE CONCAT('%',#{name},'%')
        </if>
        <if test='stat_capacity != null and stat_capacity !=""'>
            AND A.capacity <![CDATA[ >= ]]>  #{stat_capacity}
        </if>
        <if test='end_capacity != null and end_capacity !=""'>
            AND A.capacity <![CDATA[ <= ]]>  #{end_capacity}
        </if>
        <if test='stat_avg_error_rate != null and stat_avg_error_rate !=""'>
            AND B.avg_error_rate <![CDATA[ >= ]]>  #{stat_avg_error_rate}
        </if>
        <if test='end_avg_error_rate != null and end_avg_error_rate !=""'>
            AND B.avg_error_rate <![CDATA[ <= ]]>  #{end_avg_error_rate}
        </if>
        ORDER BY A.id
    </select>
    <select id="getRsrPlantONList" parameterType="hashMap" resultType="hashMap" >
        SELECT
            B.id AS 자원ID
             ,B.facility_type AS 설비구분
             ,B.status AS 발전상태
             ,B.capacity AS 설비용량
             ,B.ess_status AS ESS상태
             ,B.ess_capacity AS ESS용량
             ,B.name AS 발전자원명
             ,C.avg_error_rate AS 평균오차율
             ,C.max_error_rate AS 최대오차율
             ,C.min_error_rate AS 최소오차율
             ,D.brokerage_contract_end_date AS 계약종료일시
             ,B.created_at AS 자원추가일시
        FROM resource_set_list A
                 INNER JOIN resource B ON  A.resource_id = B.id
                 LEFT OUTER JOIN ( SELECT
                                       resource_id
                                        ,(SUM(error_rate) / COUNT(error_rate)) *100  AS avg_error_rate
                                        ,MAX(error_rate) AS max_error_rate
                                        ,MIN(error_rate) AS min_error_rate
                                   FROM forecast_by_resource GROUP BY resource_id
        ) C ON  B.id = C.resource_id
                 LEFT OUTER JOIN resource_meta D ON A.resource_id = D.resource_id
        WHERE A.resource_set_id = #{집합자원ID}
        ORDER BY B.id
    </select>
    <insert id="setRsrPlant" parameterType="hashMap">
        INSERT INTO resource_set_list(
             resource_set_id
            ,resource_id
        )VALUES(
            #{집합자원ID}
            ,#{자원ID}
               )
    </insert>



    <select id="getPlantBusiList" parameterType="hashMap" resultType="hashMap" >
        SELECT
            A.id AS 발전사업자ID
            ,A.name AS 발전사업자명
            ,A.business_registration_no AS 사업자등록번호
            ,A.ceo AS 대표자명
            ,A.ceo_contract AS 대표자전화번호
            ,A.manager AS 담당자명
            ,A.manager_contract AS 담당자전화번호
            ,A.address AS 주소
            ,B.cnt AS 발전사업수
            ,B.capacity AS 설비용량
            ,B.ess_capacity AS ESS용량
        FROM generation_business_company A
            LEFT OUTER JOIN (
                        SELECT
                            generation_business_company_id
                            ,COUNT(id) AS cnt
                            ,SUM(capacity) AS capacity
                            ,SUM(ess_capacity) AS ess_capacity
                        FROM resource
                        GROUP BY generation_business_company_id
                        ) B ON A.id = B.generation_business_company_id
        WHERE 1=1
        <if test='name != null and name !=""'>
            AND A.name LIKE CONCAT('%',#{name},'%')
        </if>
        <if test='business_registration_no != null and business_registration_no !=""'>
            AND A.business_registration_no = #{business_registration_no}
        </if>
        <if test='ceo != null and ceo !=""'>
            AND A.ceo LIKE CONCAT('%',#{ceo},'%')
        </if>
        <if test='manager != null and manager !=""'>
            AND A.manager LIKE CONCAT('%',#{manager},'%')
        </if>
        <if test='manager_contract != null and manager_contract !=""'>
            AND A.manager_contract LIKE CONCAT('%',#{manager_contract},'%')
        </if>
        <if test='address != null and address !=""'>
            AND A.address LIKE CONCAT('%',#{address},'%')
        </if>
        ORDER BY A.id
        LIMIT #{페이지번호},#{행갯수}
    </select>
    <select id="getPlantBusiListCnt" parameterType="hashMap" resultType="int" >
        SELECT
          COUNT(A.id) AS CNT
        FROM generation_business_company A
            LEFT OUTER JOIN (
                            SELECT
                                generation_business_company_id
                                ,COUNT(id) AS cnt
                                ,SUM(capacity) AS capacity
                                ,SUM(ess_capacity) AS ess_capacity
                            FROM resource
                            GROUP BY generation_business_company_id
                            ) B ON A.id = B.generation_business_company_id
        WHERE 1=1
        <if test='name != null and name !=""'>
            AND A.name LIKE CONCAT('%',#{name},'%')
        </if>
        <if test='business_registration_no != null and business_registration_no !=""'>
            AND A.business_registration_no = #{business_registration_no}
        </if>
        <if test='ceo != null and ceo !=""'>
            AND A.ceo LIKE CONCAT('%',#{ceo},'%')
        </if>
        <if test='manager != null and manager !=""'>
            AND A.manager LIKE CONCAT('%',#{manager},'%')
        </if>
        <if test='manager_contract != null and manager_contract !=""'>
            AND A.manager_contract LIKE CONCAT('%',#{manager_contract},'%')
        </if>
        <if test='address != null and address !=""'>
            AND A.address LIKE CONCAT('%',#{address},'%')
        </if>
    </select>
    <select id="getBusiChk" parameterType="hashMap" resultType="int" >
        SELECT
            COUNT(id) AS CNT
        FROM generation_business_company
        WHERE 1=1
        AND business_registration_no = #{사업자등록번호}

    </select>
    <select id="getPlantBusiDtl" parameterType="hashMap" resultType="hashMap" >
        SELECT
            A.id AS 발전사업자ID
             ,A.name AS 발전사업자명
             ,A.business_registration_no AS 사업자등록번호
             ,A.ceo AS 대표자명
             ,A.ceo_contract AS 대표자전화번호
             ,A.manager AS 담당자명
             ,A.manager_contract AS 담당자전화번호
             ,A.address AS 주소
        FROM generation_business_company A
        WHERE 1=1
            AND A.id  =  #{발전사업자ID}
    </select>
    <update id="setPlantBusiDel"  parameterType="hashMap" >
        DELETE FROM generation_business_company WHERE  id = #{발전사업자ID}
    </update>
    <update id="setPlantBusiSave"  parameterType="hashMap" >
        UPDATE generation_business_company SET
            name = #{발전사업자명}
            ,business_registration_no = #{사업자등록번호}
            ,address = #{주소}
            ,zip_code=#{우편번호}
            ,ceo = #{대표자명}
            ,ceo_contract = #{대표자전화번호}
            ,manager = #{담당자명}
            ,manager_contract = #{당담자전화번호}
        WHERE id = #{발전사업자ID}

    </update>
    <update id="setPlantBusiAdd"  parameterType="hashMap" >
           INSERT INTO generation_business_company(
               name
               ,business_registration_no
               ,address
               ,zip_code
               ,ceo
               ,ceo_contract
               ,manager
               ,manager_contract
               ,created_at
               ,created_by
           )VALUES(
              #{발전사업자명}
              ,#{사업자등록번호}
              ,#{주소}
              ,#{우편번호}
              ,#{대표자명}
              ,#{대표자전화번호}
              ,#{담당자명}
              ,#{담당자전화번호}
              ,NOW()
              ,#{작성자}
           )
        <selectKey keyProperty="id" resultType="hashmap" order="AFTER">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
    </update>
    <select id="getPlantBusiRsrList" parameterType="hashMap" resultType="hashMap" >
        SELECT
            A.id AS 발전자원ID
             ,A.facility_type AS  설비구분
             ,A.status AS 발전상태
             ,A.capacity AS 설비용량
             ,A.ess_status AS ESS운영상태
             ,A.ess_capacity AS ESS설비용량
             ,A.name AS 발전자원명
             ,B.has_brokerage_contract AS 중개시장참여
             ,B.previous_dealing_type AS 기존거래방식
             ,A.address AS 주소
        FROM resource A
                 LEFT OUTER JOIN resource_meta B ON A.id = B.resource_id
        WHERE 1=1
          AND A.generation_business_company_id  =  #{발전사업자ID}
        <if test='facility_type != null and facility_type !=""'>
            AND A.facility_type = #{facility_type}
        </if>
        <if test='status != null and status !=""'>
            AND A.status = #{status}
        </if>
        <if test='ess_status != null and ess_status !=""'>
            AND A.ess_status = #{ess_status}
        </if>
        <if test='has_brokerage_contract != null and has_brokerage_contract !=""'>
            AND B.has_brokerage_contract = #{has_brokerage_contract}
        </if>
        <if test='previous_dealing_type != null and previous_dealing_type !=""'>
            AND B.previous_dealing_type = #{previous_dealing_type}
        </if>
        <if test='name != null and name !=""'>
            AND A.name LIKE CONCAT('%',#{name},'%')
        </if>
        ORDER BY A.id
        LIMIT #{페이지번호},#{행갯수}
    </select>
    <select id="getPlantBusiRsrListCnt" parameterType="hashMap" resultType="int" >
        SELECT
           COUNT(A.id) AS CNT
        FROM resource A
                 LEFT OUTER JOIN resource_meta B ON A.id = B.resource_id
        WHERE 1=1
          AND A.generation_business_company_id  =  #{발전사업자ID}
        <if test='facility_type != null and facility_type !=""'>
            AND A.facility_type = #{facility_type}
        </if>
        <if test='status != null and status !=""'>
            AND A.status = #{status}
        </if>
        <if test='ess_status != null and ess_status !=""'>
            AND A.ess_status = #{ess_status}
        </if>
        <if test='has_brokerage_contract != null and has_brokerage_contract !=""'>
            AND B.has_brokerage_contract = #{has_brokerage_contract}
        </if>
        <if test='previous_dealing_type != null and previous_dealing_type !=""'>
            AND B.previous_dealing_type = #{previous_dealing_type}
        </if>
        <if test='name != null and name !=""'>
            AND A.name LIKE CONCAT('%',#{name},'%')
        </if>
    </select>
    <insert id="getPlantBusiRsrAdd" parameterType="hashMap">
        INSERT INTO resource(
                 generation_business_company_id
                ,name
                ,address
                ,zip_code
                ,latitude
                ,longitude
                ,facility_type
                ,status
                ,capacity
                ,has_ess
                ,ess_status
                ,ess_capacity
                ,area_type
                ,created_at
                ,created_by
        )VALUES(
                #{발전사업자ID}
               ,#{발전자원명}
               ,#{주소}
               ,#{우편번호}
               ,#{위도}
               ,#{경도}
               ,#{설비구분}
               ,#{설비상태}
               ,#{설비용량}
               ,#{ESS유무}
               ,#{ESS운영상태}
               ,#{ESS설비용량}
               ,#{지역구분}
               ,NOW()
               ,#{작성자}
               )
        <selectKey keyProperty="id" resultType="hashmap" order="AFTER">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
    </insert>
    <insert id="getPlantBusiRsrMetaAdd" parameterType="hashMap">
        INSERT INTO resource_meta(
              resource_id
             ,name
             ,business_registration_no
             ,ceo
             ,ceo_contract
             ,manager
             ,manager_contract
             ,bank
             ,bank_account
             ,bank_account_holder
             ,has_o_and_m_contract
             ,contract_start_date
             ,contract_end_date
             ,has_rec_contraction
             ,rec_contract_start_date
             ,rec_contract_end_date
             ,has_kpx_meter
             ,kpx_resource_id
             ,kepco_meter_code
             ,previous_dealing_type
             ,has_brokerage_contract
             ,brokerage_contract_start_date
             ,brokerage_contract_end_date
             ,commission_rate
             ,monitoring_info
             ,created_at
             ,created_by
        )VALUES(
                   #{발전자원ID}
               ,#{발전자원명}
               ,#{사업자등록번호}
               ,#{대표자명}
               ,#{대표자전화번호}
               ,#{담당자명}
               ,#{담당자전화번호}
               ,#{정산계좌은행}
               ,#{정산계좌번호}
               ,#{정산계좌명의}
               ,#{ONM계약여부}
               ,#{계약기간시작일자}
               ,#{계약기간종료일자}
               ,#{REC계약여부}
               ,#{REC계약기간시작일자}
               ,#{REC계약기간종료일자}
               ,#{KPX계량기설치여부}
               ,#{분산자원코드}
               ,#{한전계량기코드}
               ,#{기존거래방식}
               ,#{중개시장참여}
               ,#{전력중계계약시작일자}
               ,#{전력중계계약종료일자}
               ,#{중개사업계약종류}
               ,#{모니터링정보}
               ,NOW()
               ,#{작성자}
               )

    </insert>
    <select id="getPlantBusiRsrDtl" parameterType="hashMap" resultType="hashMap" >
        SELECT
            A.id AS 발전자원ID
             ,A.name AS 발전자원명
             ,A.address AS 주소
             ,A.zip_code AS 우편번호
             ,A.latitude AS 위도
             ,A.longitude AS 경도
             ,A.facility_type AS 설비구분
             ,A.status AS 설비상태
             ,A.capacity AS 설비용량
             ,A.has_ess AS ESS유무
             ,A.ess_status AS ESS운영상태
             ,A.ess_capacity AS ESS설비용량
             ,A.area_type AS 지역구분
             ,B.business_registration_no AS 사업자등록번호
             ,B.ceo AS 대표자명
             ,B.ceo_contract AS 대표자전화번호
             ,B.manager AS 담당자명
             ,B.manager_contract AS 담당자전화번호
             ,B.bank AS 정산계좌은행
             ,B.bank_account AS 정산계좌번호
             ,B.bank_account_holder AS 정산계좌명의
             ,B.has_o_and_m_contract AS ONM계약여부
             ,B.contract_start_date AS 계약기간시작일자
             ,B.contract_end_date AS 계약기간종료일자
             ,B.has_rec_contraction AS REC계약여부
             ,B.rec_contract_start_date AS REC계약기간시작일자
             ,B.rec_contract_end_date AS REC계약기간종료일자
             ,B.has_brokerage_contract AS 중개시장참여
             ,B.brokerage_contract_start_date AS 전력중계계약시작일자
             ,B.brokerage_contract_end_date AS 전력중계계약종료일자
             ,B.has_kpx_meter AS KPX계량기설치여부
             ,B.kpx_resource_id AS 분산자원코드
             ,B.kepco_meter_code AS 한전계량기코드
             ,B.previous_dealing_type AS 기존거래방식
             ,B.commission_rate AS 중개사업계약종류
             ,B.monitoring_info AS 모니터링정보
        FROM resource A
                 LEFT OUTER JOIN resource_meta B ON A.id = B.resource_id
        WHERE A.id = #{발전자원ID}
    </select>
    <update id="setPlantBusiRsrSave" parameterType="hashMap">
        UPDATE resource SET
            name = #{발전자원명}
            ,address = #{주소}
            ,zip_code = #{우편번호}
            ,latitude = #{위도}
            ,longitude = #{경도}
            ,facility_type = #{설비구분}
            ,status = #{설비상태}
            ,capacity = #{설비용량}
            ,has_ess = #{ESS유무}
            ,ess_status = #{ESS운영상태}
            ,ess_capacity = #{ESS설비용량}
            ,area_type = #{지역구분}
        WHERE id = #{발전자원ID}
    </update>
    <update id="setPlantBusiRsrMetaSave" parameterType="hashMap">
        UPDATE resource_meta SET
            name = #{발전자원명}
           ,business_registration_no = #{사업자등록번호}
           ,ceo = #{대표자명}
           ,ceo_contract = #{대표자전화번호}
           ,manager = #{담당자명}
           ,manager_contract = #{담당자전화번호}
           ,bank = #{정산계좌은행}
           ,bank_account = #{정산계좌번호}
           ,bank_account_holder = #{정산계좌명의}
           ,has_o_and_m_contract = #{ONM계약여부}
           ,contract_start_date = #{계약기간시작일자}
           ,contract_end_date = #{계약기간종료일자}
           ,has_rec_contraction = #{REC계약여부}
           ,rec_contract_start_date = #{REC계약기간시작일자}
           ,rec_contract_end_date = #{REC계약기간종료일자}
           ,has_kpx_meter = #{KPX계량기설치여부}
           ,kpx_resource_id = #{분산자원코드}
           ,kepco_meter_code = #{한전계량기코드}
           ,previous_dealing_type = #{기존거래방식}
           ,has_brokerage_contract = #{중개시장참여}
           ,brokerage_contract_start_date = #{전력중계계약시작일자}
           ,brokerage_contract_end_date = #{전력중계계약종료일자}
           ,commission_rate = #{중개사업계약종류}
           ,monitoring_info = #{모니터링정보}
        WHERE resource_id = #{발전자원ID}
    </update>
    <update id="setPlantBusiRsrDel"  parameterType="hashMap" >
        DELETE FROM resource WHERE  id = #{발전자원ID}
    </update>
    <update id="setPlantBusiRsrMetaDel"  parameterType="hashMap" >
        DELETE FROM resource_meta WHERE  resource_id = #{발전자원ID}
    </update>

    <select id="getPtrRsrList" parameterType="hashMap" resultType="hashMap" >
        SELECT
            A.id AS 참여자원ID
             ,A.facility_type AS 설비구분
             ,A.status AS 발전상태
             ,A.capacity AS 설비용량
             ,A.ess_status AS ESS상태
             ,A.ess_capacity AS ESS용량
             ,A.name AS 발전자원명
             ,D.name AS 발전사업자명
             ,E.avg_error_rate AS 평균오차율
             ,F.kpx_resource_id AS 분산자원코드
             ,F.brokerage_contract_start_date AS 전력중계계약시작일자
             ,F.brokerage_contract_end_date AS 전력중계계약종료일자
             ,C.name AS 집합자원그룹명
        FROM resource A
                 LEFT OUTER JOIN resource_set_list B ON A.id = B.resource_id
                 LEFT OUTER JOIN resource_set C ON B.resource_set_id = C.id
                 LEFT OUTER JOIN generation_business_company D ON A.generation_business_company_id = D.id
                 LEFT OUTER JOIN (SELECT
                                      resource_id
                                       ,SUM(error_rate) / COUNT(error_rate) AS avg_error_rate
                                  FROM forecast_by_resource GROUP BY resource_id) E  ON A.id = E.resource_id
                 LEFT OUTER JOIN resource_meta F ON A.id = F.resource_id

       WHERE 1=1
        AND F.kpx_resource_id IS NOT NULL
        <if test='facility_type != null and facility_type !=""'>
            AND A.facility_type = #{facility_type}
        </if>
        <if test='status != null and status !=""'>
            AND A.status = #{status}
        </if>
        <if test='ess_status != null and ess_status !=""'>
            AND A.ess_status = #{ess_status}
        </if>
        <if test='name != null and name !=""'>
            AND A.name LIKE CONCAT('%',#{name},'%')
        </if>
        <if test='kpx_resource_id != null and kpx_resource_id !=""'>
            AND F.kpx_resource_id = #{kpx_resource_id}
        </if>
        <if test='start_error_rate != null and start_error_rate !=""'>
            AND E.start_error_rate <![CDATA[ >= ]]> #{start_error_rate}
        </if>
        <if test='end_error_rate != null and end_error_rate !=""'>
            AND E.end_error_rate <![CDATA[ <= ]]> #{end_error_rate}
        </if>
        <if test='rsr_name != null and rsr_name !=""'>
            AND C.rsr_name LIKE CONCAT('%',#{rsr_name},'%')
        </if>
        ORDER BY A.id
        LIMIT #{페이지번호},#{행갯수}
    </select>
    <select id="getPtrRsrListCnt" parameterType="hashMap" resultType="int" >
        SELECT
            COUNT(A.id) AS CNT
        FROM resource A
                 LEFT OUTER JOIN resource_set_list B ON A.id = B.resource_id
                 LEFT OUTER JOIN resource_set C ON B.resource_set_id = C.id
                 LEFT OUTER JOIN generation_business_company D ON A.generation_business_company_id = D.id
                 LEFT OUTER JOIN (SELECT
                                      resource_id
                                       ,SUM(error_rate) / COUNT(error_rate) AS avg_error_rate
                                  FROM forecast_by_resource GROUP BY resource_id) E  ON A.id = E.resource_id
                 LEFT OUTER JOIN resource_meta F ON A.id = F.resource_id
        WHERE 1=1
        AND F.kpx_resource_id IS NOT NULL
        <if test='facility_type != null and facility_type !=""'>
            AND A.facility_type = #{facility_type}
        </if>
        <if test='status != null and status !=""'>
            AND A.status = #{status}
        </if>
        <if test='ess_status != null and ess_status !=""'>
            AND A.ess_status = #{ess_status}
        </if>
        <if test='name != null and name !=""'>
            AND A.name LIKE CONCAT('%',#{name},'%')
        </if>
        <if test='kpx_resource_id != null and kpx_resource_id !=""'>
            AND F.kpx_resource_id = #{kpx_resource_id}
        </if>
        <if test='start_error_rate != null and start_error_rate !=""'>
            AND E.start_error_rate <![CDATA[ >= ]]> #{start_error_rate}
        </if>
        <if test='end_error_rate != null and end_error_rate !=""'>
            AND E.end_error_rate <![CDATA[ <= ]]> #{end_error_rate}
        </if>
        <if test='rsr_name != null and rsr_name !=""'>
            AND C.rsr_name LIKE CONCAT('%',#{rsr_name},'%')
        </if>
    </select>
    <select id="getPtrRsrListPop" parameterType="hashMap" resultType="hashMap" >
        SELECT
            A.id AS 자원ID
            ,A.facility_type AS 설비구분
            ,A.status AS 발전상태
            ,A.capacity AS 설비용량
            ,A.ess_status AS ESS상태
            ,A.ess_capacity AS ESS용량
            ,A.name AS 발전자원명
            ,B.has_brokerage_contract AS 중개시장참여
            ,B.previous_dealing_type AS 기존거래방식
        FROM resource A
        LEFT OUTER JOIN resource_meta B ON A.id = B.resource_id
        WHERE A.id NOT IN(SELECT resource_id FROM resource_set_list)
        AND B.kpx_resource_id IS NULL
        <if test='facility_type != null and facility_type !=""'>
            AND A.facility_type = #{facility_type}
        </if>
        <if test='status != null and status !=""'>
            AND A.status = #{status}
        </if>
        <if test='ess_status != null and ess_status !=""'>
            AND A.ess_status = #{ess_status}
        </if>
        <if test='name != null and name !=""'>
            AND A.name LIKE CONCAT('%',#{name},'%')
        </if>
        <if test='has_brokerage_contract != null and has_brokerage_contract !=""'>
            AND B.has_brokerage_contract = #{has_brokerage_contract}
        </if>
        <if test='previous_dealing_type != null and previous_dealing_type !=""'>
            AND B.previous_dealing_type = #{previous_dealing_type}
        </if>
        ORDER BY A.id
        LIMIT #{페이지번호},#{행갯수}
    </select>
    <select id="getPtrRsrListPopCnt" parameterType="hashMap" resultType="int" >
        SELECT
         COUNT(A.id) AS CNT
        FROM resource A
        LEFT OUTER JOIN resource_meta B ON A.id = B.resource_id
        WHERE A.id NOT IN(SELECT resource_id FROM resource_set_list)
        AND B.kpx_resource_id IS NULL
        <if test='facility_type != null and facility_type !=""'>
            AND A.facility_type = #{facility_type}
        </if>
        <if test='status != null and status !=""'>
            AND A.status = #{status}
        </if>
        <if test='ess_status != null and ess_status !=""'>
            AND A.ess_status = #{ess_status}
        </if>
        <if test='name != null and name !=""'>
            AND A.name LIKE CONCAT('%',#{name},'%')
        </if>
        <if test='has_brokerage_contract != null and has_brokerage_contract !=""'>
            AND B.has_brokerage_contract = #{has_brokerage_contract}
        </if>
        <if test='previous_dealing_type != null and previous_dealing_type !=""'>
            AND B.previous_dealing_type = #{previous_dealing_type}
        </if>

    </select>
</mapper>